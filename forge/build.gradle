plugins {
    id 'com.gradleup.shadow'
}

loom {
    forge {
        mixinConfig "bandits_quirk_lib.mixins.json"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    forge "net.minecraftforge:forge:$rootProject.forge_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury-forge:$rootProject.architectury_api_version"

    // KubeJS
//    modImplementation "dev.latvian.mods:architectury-forge:${kubejs_version}"
//    api("dev.latvian.mods:kubejs-forge:$kubejs_version")

    // KubeJS
    modImplementation "dev.latvian.mods:kubejs-forge:${kubejs_version}"

    // Fancy Menu and it's dependencies
    modImplementation "curse.maven:fancymenu-367706:6523977"
    modImplementation "curse.maven:konkrete-410295:5028413"
    modImplementation "curse.maven:melody-938643:5109692"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')

    implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-common:${mixin_extras}"))
    implementation(include("com.github.llamalad7.mixinextras:mixinextras-forge:${mixin_extras}"))
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}
