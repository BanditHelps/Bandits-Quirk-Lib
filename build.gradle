plugins {
    id 'dev.architectury.loom' version '1.10-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.gradleup.shadow' version '8.3.6' apply false
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version

    repositories {
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }

        // Kube JS and rhino
        maven {
            // saps.dev Maven (KubeJS and Rhino)
            url = "https://maven.saps.dev/minecraft"
            content {
                includeGroup "dev.latvian.mods"
            }
        }

        maven {
            url "https://maven.latvian.dev/releases"
            content {
                includeGroup "dev.latvian.mods"
            }
        }

        // jitpack (mixinextras only)
        maven {
            // location of mixinextras
            url "https://jitpack.io"
            content {
                includeGroup "com.github.llamalad7.mixinextras"
            }
        }

        maven {
            url "https://www.cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }

        // ThreeTAG
        maven {
            url 'https://maven.threetag.net'
        }

        // Parchment
        maven {
            url = 'https://maven.parchmentmc.net/'
            content {
                includeGroup 'org.parchmentmc.data'
            }
        }

        // Forge Config API Port
        maven {
            name = "Fuzs Mod Resources"
            url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
        }

        // Modrinth
        maven {
            url "https://api.modrinth.com/maven"
        }

        // Player Animator
        maven {
            name "KosmX's maven"
            url 'https://maven.kosmx.dev/'
        }

        // Gecko Lib
        maven {
            name = 'Gecko Lib'
            url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        }

        // Trinkets
        maven {
            url "https://maven.terraformersmc.com/releases/"
        }

//        // KubeJS / Rhino
//        maven {
//            url = 'https://maven.latvian.dev/releases'
//            content {
//                includeGroup 'dev.latvian.mods'
//            }
//        }

        // Cardinal Components
        maven {
            name = 'Ladysnake Mods'
            url = 'https://maven.ladysnake.org/releases'
        }

        // ReachEntityAttributes
        maven {
            url = 'https://maven.jamieswhiteshirt.com/libs-release'
            content {
                includeGroup 'com.jamieswhiteshirt'
            }
        }

        // Porting Lib
        maven { url = "https://mvn.devos.one/snapshots/" }

//        maven { url 'https://jitpack.io' }
    }
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.minecraft_version}:2023.09.03@zip")
        }
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    // Configure Maven publishing.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
            }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }
}
